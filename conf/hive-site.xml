<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
  <property>
    <name>javax.jdo.option.ConnectionURL</name>
    <value>jdbc:mysql://localhost:3306/metastore?createDatabaseIfNotExist=true</value>
    <description>JDBC connect string for a JDBC metastore</description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionDriverName</name>
    <value>com.mysql.cj.jdbc.Driver</value>
    <description>Driver class name for a JDBC metastore</description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionUserName</name>
    <value>hive</value>
    <description>username to use against metastore database</description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionPassword</name>
    <value>hive</value>
    <description>password to use against metastore database</description>
  </property>

  <property>
    <name>hive.metastore.warehouse.dir</name>
    <value>/user/hive/warehouse</value>
    <description>location of default database for the warehouse</description>
  </property>

  <property>
    <name>hive.metastore.schema.verification</name>
    <value>false</value>
    <description>set this to false to disable schema verification</description>
  </property>

  <property>
    <name>hive.exec.local.scratchdir</name>
    <value>/tmp/hive/${user.name}</value>
    <description>local scratch space for Hive jobs</description>
  </property>

  <property>
    <name>hive.querylog.location</name>
    <value>/user/hive/querylog</value>
    <description>location of Hive query log</description>
  </property>
  
  <property>
    <name>hive.execution.engine</name>
    <value>tez</value>
    <description>Execution engine for Hive</description>
  </property>
  
  <property>
    <name>hive.tez.container.size</name>
    <value>4096</value>
    <description>Size of Tez container</description>
  </property>

  <property>
    <name>hive.auto.convert.join.noconditionaltask.size</name>
    <value>1000000000</value>
    <description>Maximum size of the data that will fit in memory to convert small joins to map joins</description>
  </property>

  <property>
    <name>hive.map.aggr</name>
    <value>true</value>
    <description>Enable map-side aggregation for GROUP BYs and COUNT(DISTINCT)s</description>
  </property>

  <property>
    <name>hive.optimize.bucketmapjoin.sortedmerge</name>
    <value>true</value>
    <description>Use sorted merge bucket map join optimization</description>
  </property>

  <property>
    <name>hive.server2.enable.doAs</name>
    <value>true</value>
    <description>Allow impersonation of HDFS users</description>
  </property>

</configuration>
